@startUML

hide enum methods
hide interface attributes

package Dominio{
    class Poliza {
        -idSucursal: Integer
        -numeroPoliza: Integer
        -cobertura: TipoCobertura
        -inicioVigencia: Date
        -finVigencia: Date
        -kmsAnuales: Integer
        -estado: EstadoPoliza
        -siniestros: Integer
        +calcularSuma(): Float
        +polizaPaga(): Boolean
        +calcularPrima(): Float
        +calcularDescuentos(): Float
    }
    
    class ModificacionPoliza {
        -cobertura: TipoCobertura
        -kmsAnuales: Integer
        -siniestros: Integer
    }
    
    class Cobrador {
        +registrarPago(Poliza): Void
    }
    
    class ProductorSeguros {
        +altaCliente(String[]): Cliente
        +modificaCliente(String[], Cliente): Void
        +buscarCliente(String[]): Cliente
        +consultarCliente(Cliente): Void
        +bajaCliente(Cliente): Void
        +altaPoliza(String[]): Poliza
        +modificarPoliza(String[], Poliza): Void
        +bajaPoliza(Poliza): Void
    }
    
    class Gerente {
        generarPropuestasRenovacion(): Void
        generarInforme(): Void
    }
        
    class Cliente {
        -idCliente: Integer
        -nombre: String
        -apellido: String
        -tipoDocumento: TipoDocumento
        -numeroDocumento: Integer
        -cuil: Integer
        -sexo: Sexo
        -nacimiento: Date
        -profesion: String
        -estadoCivil: EstadoCivil
        -email: String
        -registro: Integer
        -condicionIva: CondicionIva
        -domicilio: Domicilio
        +edad(): Integer
        +enMora(): Boolean
        +alDia(): Boolean
        +clienteNormal(): Boolean
        +clienteActivo(): Boolean
        +clientePlata(): Boolean
    }

    class HijoDeclarado {
        -fechaNacimiento: Date
        -estadoCivil: EstadoCivil
        -sexo: Sexo
        +edad(): Integer
    }

    class Domicilio {
        -calle: String
        -numero: Integer
        -piso: Integer
        -departamento: String
    }

    /'abstract EstadoPoliza {
        +handle(): Void
        +generada(): Boolean
        +suspendida(): Boolean
        +vigente(): Boolean
        +finalizada(): Boolean
    }

    class PolizaGenerada {
        +generada(): Boolean //<<Override>>// 
    }
    
    class PolizaSuspendida{
        +suspendida(): Boolean //<<Override>>//
    }
    
    class PolizaVigente{
        +vigente(): Boolean //<<Override>>//
    }
    
    class PolizaFinalizada{
        +finalizada(): Boolean //<<Override>>//
    }'/
    
    class Vehiculo {
        -dominio: String
        -chasis: String
        -motor: String
        -modelo: String
        -marca: String
        -fabricacion: Integer
    }

    class MedidaSeguridad {
	  -seGuardaEnGarage: Boolean
	  -poseeAlarma: Boolean
	  -poseeRastreoVehicular: Boolean
	  -poseeTuercasAntirrobo: Boolean
    }
    
    abstract FormaPago {
        +{abstract}polizaPaga(): Boolean
    }
    
    class PagoMensual {
        +polizaPaga(): Boolean //<<Override>>//
    }
    
    class PagoSemestral {
        +polizaPaga(): Boolean //<<Override>>//
    }
    
    class Cuota {
        -importe: Float
        -fechaPago: Date
        -coutaPaga: Boolean
        +registarPago(): Void
    }
    
    class Localidad {
        -localidad: String
        -provincia: String
    }

    class Usuario {
	    -nombreUsuario: String
	    -passwordHash: byte[512]
	    -salt: byte[16]
	    -nombre: String
	    -apellido: String
	    -email: String
    }
    
    enum EstadoPoliza {
        Generada
        Vigente
        Supendida
        Finalizada
    }

    enum TipoDocumento {
        DNI
        LU
        LC
        LE
    }
    
    enum TipoCliente {
        Normal
        Activo
        Plata
    }

    enum CondicionIva {
        ResponsableInscripto
        ResponsableNoInscripto
        NoResponsable
        SujetoExento
        ConsumidorFinal
        ResponsableMonotributo
        NoCategorizado
        ProveedorExterior
        ClienteExterior
        Liberado
        ResponsableInscriptoPercepcion
        PeqContribuyente
        MonotributistaSocial
        PeqContribuyenteSocial
    }

    enum TipoCobertura {
        ResponsabilidadCivil
        RoboIncendio
        TodoTotal
        TercerosCompletos
        TodoRiesgo
    }

    enum EstadoCivil{
        Soltero
        Casado
        Viudo
    }

    enum Sexo {
        Masculino
        Femenino
    }
    
    Cliente "1" -- "0..n" Poliza
    Cliente "1..n" -- "1" Domicilio
    
    Usuario <-- Cobrador: <<is role of>>
    Usuario <-- ProductorSeguros: <<is role of>>
    Usuario <-- Gerente: <<is role of>>
   
    Poliza "0..n" o-- "1" Localidad
    Poliza "1..n" o-- "0..n" HijoDeclarado
    Poliza "1..n" o-- "1" Vehiculo
    Poliza "1" o-- "1" FormaPago
    Poliza "1" -- "1..n" ModificacionPoliza
    
    ModificacionPoliza "1" -- "0..n" HijoDeclarado
    ModificacionPoliza "1" -- "1" Vehiculo
    
    Vehiculo "1..n" *-- "1" MedidaSeguridad
    
    /'Poliza .. EstadoPoliza
    EstadoPoliza <|-- PolizaVigente
    EstadoPoliza <|-- PolizaGenerada
    EstadoPoliza <|-- PolizaSuspendida
    EstadoPoliza <|-- PolizaFinalizada'/
    
    FormaPago <|-- PagoMensual
    FormaPago <|-- PagoSemestral
    
    PagoMensual "1" *-- "6" Cuota
    PagoSemestral "1" *-- "1" Cuota

    Domicilio "1..n" o-- "1" Localidad
}

package "Acceso a Datos"{
    interface "DAO<T>" {
        +guardar(<T>): Void
        +modifcar(<T>, String[]): Void
        +eliminar(<T>): Void
        +getAll(): ArrayList<T>
    }
    
    class DaoCliente{
        -clientes: ArrayList<Cliente>
        +guardar(Cliente): Void //<<Override>>//
        +modificar(Cliente, String[]): Void //<<Override>>//
        +eliminar(Cliente): Void //<<Override>>//
        +getAll(): ArrayList<Cliente> //<<Override>>//
    }
    
    class DaoPoliza{
        -polizas: ArrayList<Poliza>
        +guardar(Poliza): Void //<<Override>>//
        +modificar(Poliza, String[]): Void //<<Override>>//
        +eliminar(Poliza): Void //<<Override>>//
        +getAll(): ArrayList<Poliza> //<<Override>>//
    }
    
    class DaoUsuario{
        -usuarios: ArrayList<Usuario>
        +guardar(Usuario): Void //<<Override>>//
        +modificar(Usuario, String[]): Void //<<Override>>//
        +eliminar(Usuario): Void //<<Override>>//
        +getAll(): ArrayList<Usuario> //<<Override>>//
    }
    
    class ValorAutomovil {
        +{static} calcularValor(String[]): Float
    }
    
    "DAO<T>" <|.. DaoPoliza: <<implements>>
    "DAO<T>" <|.. DaoCliente: <<implements>>
    "DAO<T>" <|.. DaoUsuario: <<implements>>
}

package Logica{
    class GestorCliente <<(S, #FF7700) Singleton>> {
        -{static} singleton: GestorCliente
        -GestorCliente()
        +{static} getInstance(): GestorCliente
        +buscar(String[]): Cliente 
        +modificar(Cliente, String[]): Void
        +alta(String[]): Cliente
        +calcularIdCliente(Cliente): Void
    }
    
    class GestorPoliza <<(S, #FF7700) Singleton>> {
        -{static} singleton: GestorPoliza
        -GestorPoliza()
        +{static} getInstance(): GestorPoliza
        +alta(String[]): Poliza
        +buscar(String[]): Poliza
        +modificar(Poliza, String[]): Void
        +registrarPago(Poliza): Void
    }

    class GestorUsuario <<(S, #FF7700) Singleton>> {
        -{static} singleton: GestorUsuario
        -GestorUsuario()
        +{static} getInstance(): GestorUsuario
        +alta(String[]): Usuario
        +buscar(String[]): Usuario
        +modifcar(Usuario, String[]): Void
        +eliminar(Usuario): Void
    }
    
    class GestorSubSistemaDeSiniestros <<(S, #FF7700) Singleton>> {
        -{static} singleton: GestorSubSistemaDeSiniestros
        -GestorSubSistemaDeSiniestros()
        +{static} getInstance(): GestorSubSistemaDeSiniestros 
    }

	class GestorSistemaFinanciero <<(S, #FF7700) Singleton>> {
        -{static} singleton: GestorSistemaFinanciero
        -GestorSistemaFinanciero()
        +{static} getInstance(): GestorSistemaFinanciero
    }

    GestorPoliza .. GestorCliente
}

package Presentacion{

}

DaoCliente .. GestorCliente
DaoPoliza .. GestorPoliza
DaoUsuario .. GestorUsuario
'Poliza -- ValorAutomovil'

@endUML