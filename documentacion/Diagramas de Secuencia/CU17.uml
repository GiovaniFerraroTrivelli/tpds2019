@startuml

title Diagrama de Secuencia - CU17
center footer Grupo 4A: Matías Bode, Francisco Busso, Giovani Ferraro Trivelli, Miguel Storani

actor Usuario
boundary Resultados
boundary PantallaDeBusqueda
control ControladorCliente
control GestorCliente
entity "listaClientes: Collection<Cliente>" as resultado
entity listaClientesDTO
entity respuesta
control DaoCliente
activate GestorPoliza
GestorPoliza -> GestorCliente : buscarCliente()
activate GestorCliente


alt
    loop while no existen resultados de busqueda
    
        GestorCliente -> PantallaDeBusqueda : mostrarPantallaDeBusqueda()
        activate PantallaDeBusqueda
        loop while datos incorrectos
            PantallaDeBusqueda -> Usuario : Solicitar criterios de búsqueda
            activate Usuario
            Usuario -> PantallaDeBusqueda : Criterios de búsqueda
            deactivate Usuario
        end loop
        PantallaDeBusqueda -> ControladorCliente : buscarCliente(ParametrosDeBusqueda p)
        activate ControladorCliente    
        
                ControladorCliente -> GestorCliente : buscarCliente(ParametrosDeBusqueda p)
        GestorCliente -> QueryBuilder : new: QueryBuilder
        activate QueryBuilder
        GestorCliente <- QueryBuilder
        GestorCliente -> QueryBuilder : Query q := getQuery(ParametrosDeBusqueda p)
            
        loop for Parametro in p
            QueryBuilder -> Query : setParametro(Parametro)
            QueryBuilder <- Query
        end loop
        
        GestorCliente <- QueryBuilder : Query q
        deactivate QueryBuilder
            
        GestorCliente -> DaoCliente : buscarClientes(q)
        GestorCliente <- DaoCliente : listaClientes := new Collection<Cliente>
        ControladorCliente <- GestorCliente : listaClientes
        
        ControladorCliente -> listaClientesDTO : new Collection<ClienteDTO>
        
        
        activate listaClientesDTO
            
        loop for Cliente in listaClientes
            ControladorCliente -> listaClientesDTO : add(Cliente.getDTO())
            ControladorCliente <- listaClientesDTO
            deactivate listaClientesDTO
        end loop
        
        ControladorCliente -> respuesta : new: Respuesta
        activate respuesta
        ControladorCliente <- respuesta
            
        ControladorCliente -> respuesta : add(listaClientesDTO)
        ControladorCliente <- respuesta
    
        ControladorCliente -> respuesta : setResultadosPorPagina(p.getResultadosPorPagina)
        ControladorCliente <- respuesta
                
        ControladorCliente -> respuesta : setNroPagina(p.getNroPagina)
        ControladorCliente <- respuesta
        
        deactivate respuesta    
        PantallaDeBusqueda <- ControladorCliente : respuesta.JSON
        deactivate ControladorCliente

        Usuario <- PantallaDeBusqueda : lista de clientes
        activate Usuario
        Usuario -> PantallaDeBusqueda : seleccionar cliente
        Usuario <- PantallaDeBusqueda : datos del cliente
        deactivate Usuario
        
        
    end loop
    
else cancelar busqueda
    activate PantallaDeBusqueda
    Usuario -> PantallaDeBusqueda : Cancelar búsqueda
    PantallaDeBusqueda -> GestorCliente : cancelar()
    deactivate PantallaDeBusqueda
    GestorCliente --> GestorPoliza : throw exception: "Búsqueda cancelada"

end

@enduml
